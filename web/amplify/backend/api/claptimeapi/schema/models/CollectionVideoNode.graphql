enum CollectionVideoNodeStatus {
  SUBMITTED
  APPROVED
  REJECTED
}

type CollectionVideoNode
@key(
  name: "ByCollectionAndCategorySortByCreatedAt",
  fields: ["collectionVideoNodeCollectionId", "categoryId", "createdAt"],
  queryField: "listCollectionVideoNodesByCollectionAndCategorySortByCreatedAt",
)
@key(
  name: "ByCollectionAndStatus",
  fields: ["collectionVideoNodeCollectionId", "status"],
  queryField: "listCollectionVideoNodesByCollectionAndStatus",
)
@model(
  queries: { get: "getCollectionVideoNode", list: "listCollectionVideoNodes" },
  mutations: { delete: "deleteCollectionVideoNode", update: "updateCollectionVideoNode", create: "createCollectionVideoNode" },
  subscriptions: null,
)
@auth(rules: [
  { allow: owner, operations: [read, delete] },
  { allow: groups, groups: ["admin"], operations: [read] },
  { allow: private, provider: iam, operations: [create, delete, read, update] },
  { allow: private, operations: [read]},
  { allow: public, provider: iam, operations: [read]},
])
{
  id: ID!
  collection: Collection! @connection(name: "CollectionVideoNode")
  collectionVideoNodeCollectionId: ID!
  status: CollectionVideoNodeStatus!
  categoryId: ID!
  rejectionReason: String
  videoNode: VideoNode! @connection(name: "VideoNodeCollection")
  collectionVideoNodeVideoNodeId: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}
